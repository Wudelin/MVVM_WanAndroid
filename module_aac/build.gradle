apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def lifecycle_version = "2.2.0"
    def nav_version = "2.3.0-alpha05"
    def paging_version = "2.1.2"
    def room_version = "2.2.5"
    def work_version = "2.3.4"
    def fragment_version = "1.2.4"
    def coroutine_version = "1.3.3"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // Kotlin
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    api "androidx.paging:paging-runtime-ktx:$paging_version"
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$room_version"
    // Kotlin + coroutines
    api "androidx.work:work-runtime-ktx:$work_version"

    api "androidx.fragment:fragment-ktx:$fragment_version"

    // CameraX core library
    def camerax_version = '1.0.0-beta03'
    api "androidx.camera:camera-core:$camerax_version"
    // CameraX Camera2 extensions
    api "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle library
    api "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    api 'androidx.camera:camera-view:1.0.0-alpha10'
}
